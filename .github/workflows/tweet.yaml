name: Tweet My Blog

on:
  schedule:
    # Multiple time slots for human-like scheduling (6am-4pm PDT / 13-23 UTC)
    - cron: "12 13 * * *"  # 6:12am PDT (13 UTC)
    - cron: "23 14 * * *"  # 7:23am PDT (14 UTC)
    - cron: "08 15 * * *"  # 8:08am PDT (15 UTC)
    - cron: "37 16 * * *"  # 9:37am PDT (16 UTC)
    - cron: "19 17 * * *"  # 10:19am PDT (17 UTC)
    - cron: "26 18 * * *"  # 11:26am PDT (18 UTC)
    - cron: "43 19 * * *"  # 12:43pm PDT (19 UTC)
    - cron: "17 20 * * *"  # 1:17pm PDT (20 UTC)
    - cron: "33 21 * * *"  # 2:33pm PDT (21 UTC)
    - cron: "11 22 * * *"  # 3:11pm PDT (22 UTC)
    - cron: "29 23 * * *"  # 4:29pm PDT (23 UTC)
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode (no actual tweets)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  tweet:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow pushing cache updates back to repo
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Need to fetch the cache.db if it exists
        fetch-depth: 1
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tweet bot
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        SITEMAP_URL: ${{ vars.SITEMAP_URL || 'https://pikeandvine.com/post-sitemap.xml' }}
        BLOG_TITLE: ${{ vars.BLOG_TITLE || 'Pike & Vine' }}
        BLOG_DESCRIPTION: ${{ vars.BLOG_DESCRIPTION || 'SaaS Marketing & Growth' }}
        COOLDOWN_DAYS: ${{ vars.COOLDOWN_DAYS || '30' }}
        MAX_PREVIOUS_TWEETS: ${{ vars.MAX_PREVIOUS_TWEETS || '3' }}
        OPENAI_MODEL: ${{ vars.OPENAI_MODEL || 'gpt-4.1-mini' }}
        ENABLE_DELAY: ${{ vars.ENABLE_DELAY || 'true' }}
      run: |
        if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
          python run.py --test
        else
          python run.py
        fi
    
    - name: Commit updated cache and schedule
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        # Add cache.db and daily_schedule.json if they exist and were modified
        files_to_add=""
        if [ -f cache.db ]; then
          git add cache.db
          files_to_add="cache.db"
        fi
        if [ -f daily_schedule.json ]; then
          git add daily_schedule.json
          files_to_add="$files_to_add daily_schedule.json"
        fi
        
        # Only commit if there are changes
        if ! git diff --staged --quiet; then
          git commit -m "Update tweet cache and schedule [automated]"
          git push
          echo "Committed changes to: $files_to_add"
        else
          echo "No changes to commit"
        fi
        
        # Always succeed this step
        exit 0
    
    # Upload logs as artifacts for debugging
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: tweet-logs
        path: |
          tweet_generator.log
        retention-days: 30 